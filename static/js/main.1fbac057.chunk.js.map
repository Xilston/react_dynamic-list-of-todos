{"version":3,"sources":["types/Filter.ts","TodoContext/TodoContext.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoContext","React","createContext","selectedTodo","selectTodo","_todo","TodoProvider","children","useState","shownTodo","setShownTodo","Provider","value","todo","TodoItem","item","useContext","className","id","completed","cn","title","type","onClick","TodoList","items","map","TodoFilter","props","changeFilter","changeQuerry","querry","setQuerry","filter","setFilter","onChange","event","target","Active","Completed","All","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","author","setAuthor","useEffect","userId","user","classNames","href","email","name","App","todos","setTodos","isTodoLoaded","length","currentFilter","setCurrentFilter","currentQuerry","setCurrentQuerry","todosFromServer","preparedTodos","copy","normalizedQerry","trim","toLowerCase","includes","prepareTodos","newFilter","newQerry","wrappedApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fbac057.chunk.js","sourcesContent":["export enum Filter {\n  All,\n  Active,\n  Completed,\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\ninterface TodoContextProps {\n  selectedTodo: Todo | null;\n  selectTodo: (todo: Todo | null) => void;\n}\n\nexport const TodoContext = React.createContext<TodoContextProps>({\n  selectedTodo: null,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  selectTodo: (_todo: Todo | null) => {},\n});\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const TodoProvider: React.FC<Props> = ({ children }) => {\n  const [shownTodo, setShownTodo] = useState<Todo | null>(null);\n\n  function selectTodo(todo: Todo | null) {\n    setShownTodo(todo);\n  }\n\n  return (\n    <TodoContext.Provider value={{\n      selectedTodo: shownTodo,\n      selectTodo,\n    }}\n    >\n      {children}\n    </TodoContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoContext } from '../../TodoContext/TodoContext';\n\ninterface Props {\n  item: Todo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ item }) => {\n  const { selectTodo, selectedTodo } = useContext(TodoContext);\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{item.id}</td>\n      <td className=\"is-vcentered\">\n        {item.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={cn({\n            'has-text-danger': !item.completed,\n            'has-text-success': item.completed,\n          })}\n        >\n          {item.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => selectTodo(item)}\n        >\n          <span className=\"icon\">\n            <i className={cn({\n              'far fa-eye-slash': selectedTodo?.id === item.id,\n              'far fa-eye': selectedTodo?.id !== item.id,\n            })}\n            />\n\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n\n// eslint-disable-next-line no-lone-blocks\n{\n  /* <tr data-cy=\"todo\" className=\"\">\n  <td className=\"is-vcentered\">8</td>\n  <td className=\"is-vcentered\">\n    <span className=\"icon\" data-cy=\"iconCompleted\">\n      <i className=\"fas fa-check\" />\n    </span>\n  </td>\n  <td className=\"is-vcentered is-expanded\">\n    <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n  </td>\n  <td className=\"has-text-right is-vcentered\">\n    <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n      <span className=\"icon\">\n        <i className=\"far fa-eye\" />\n      </span>\n    </button>\n  </td>\n</tr> */\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\ninterface Props {\n  items: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ items }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(item => <TodoItem item={item} key={item.id} />)}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useState } from 'react';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  changeQuerry: (qerry: string) => void;\n  changeFilter: (filter: Filter) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const { changeFilter, changeQuerry } = props;\n  const [querry, setQuerry] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>):void {\n    setQuerry(event.target.value);\n    changeQuerry(event.target.value);\n  }\n\n  function resetQuerry():void {\n    setQuerry('');\n    changeQuerry('');\n  }\n\n  function handleSelect(event: React.ChangeEvent<HTMLSelectElement>):void {\n    // eslint-disable-next-line prefer-destructuring\n    const value = event.target.value;\n\n    setFilter(value);\n\n    switch (value) {\n      case 'active':\n        changeFilter(Filter.Active);\n        break;\n      case 'completed':\n        changeFilter(Filter.Completed);\n        break;\n      default: changeFilter(Filter.All);\n    }\n  }\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelect}\n            value={filter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={querry}\n          onChange={handleChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {querry && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQuerry}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useContext, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { TodoContext } from '../../TodoContext/TodoContext';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const { selectedTodo, selectTodo } = useContext(TodoContext);\n  const [author, setAuthor] = useState<User | null >(null);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then((user) => setAuthor(user));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {author === null ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={classNames({\n                'has-text-danger': !selectedTodo?.completed,\n                'has-text-success': selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${author?.email}`}>\n                {author?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoContext } from './TodoContext/TodoContext';\nimport { Filter } from './types/Filter';\n\nfunction prepareTodos(todos: Todo[], querry = '', filter = Filter.All): Todo[] {\n  let copy = [...todos];\n  const normalizedQerry = querry.trim().toLowerCase();\n\n  if (normalizedQerry) {\n    copy = copy.filter(todo => todo.title.toLowerCase().includes(normalizedQerry));\n  }\n\n  if (filter !== Filter.All) {\n    copy = copy.filter(todo => {\n      if (filter === Filter.Active) {\n        return todo.completed === false;\n      }\n\n      if (filter === Filter.Completed) {\n        return todo.completed === true;\n      }\n\n      return true;\n    });\n  }\n\n  return copy;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const isTodoLoaded = todos.length > 0;\n  const [currentFilter, setCurrentFilter] = useState(Filter.All);\n  const [currentQuerry, setCurrentQuerry] = useState('');\n  const { selectedTodo: shownTodo } = useContext(TodoContext);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => setTodos(todosFromServer));\n  }, []);\n\n  const changeQuerry = (newQerry: string):void => {\n    setCurrentQuerry(newQerry);\n  };\n\n  const changeFilter = (newFilter: Filter):void => {\n    setCurrentFilter(newFilter);\n  };\n\n  const preparedTodos = prepareTodos(todos, currentQuerry, currentFilter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter changeFilter={changeFilter} changeQuerry={changeQuerry} />\n            </div>\n\n            <div className=\"block\">\n              {!isTodoLoaded && (<Loader />)}\n              {isTodoLoaded && (<TodoList items={preparedTodos} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {shownTodo && (<TodoModal />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { TodoProvider } from './TodoContext/TodoContext';\n\nconst wrappedApp = (\n  <TodoProvider>\n    <App />\n  </TodoProvider>\n);\n\nReactDOM.render(\n  wrappedApp,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}